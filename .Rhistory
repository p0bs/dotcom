geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)
)
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((5 * Time * Time * Time) +
Wtd.Ave +
(6 * Affordability) +
(12 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)
)
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((0.5 * Time * Time * Time) +
Wtd.Ave +
(6 * Affordability) +
(12 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)
)
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((6 * Time * Time * Time) +
Wtd.Ave +
(6 * Affordability) +
(12 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)
)
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((6 * Time) +
Wtd.Ave +
(6 * Affordability) +
(12 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)
)
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((9 * Time) +
Wtd.Ave +
(6 * Affordability) +
(12 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)
)
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((12 * Time) +
Wtd.Ave +
(6 * Affordability) +
(12 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
library(tidyverse)
library(sf)
geography <- sf::st_read(
"data/Lower_Layer_Super_Output_Areas_December_2011_Super_Generalised_Clipped__Boundaries_in_England_and_Wales.dbf")
st_crs(x = geography) <- 4326
data <- read_csv("data/ScoredAreas1a.csv")
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((12 * Time) +
Wtd.Ave +
(6 * Affordability) +
(12 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)
)
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((15 * Time) +
Wtd.Ave +
(6 * Affordability) +
(12 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)
)
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((15 * Time) +
Wtd.Ave +
(5 * Affordability) +
(10 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
blogdown:::serve_site()
library(tidyverse)
library(sf)
geography <- sf::st_read(
"data/Lower_Layer_Super_Output_Areas_December_2011_Super_Generalised_Clipped__Boundaries_in_England_and_Wales.dbf")
st_crs(x = geography) <- "4326"
library(tidyverse)
library(sf)
geography <- sf::st_read(
"data/Lower_Layer_Super_Output_Areas_December_2011_Super_Generalised_Clipped__Boundaries_in_England_and_Wales.dbf")
st_crs(x = geography) <- 4326
data <- read_csv("data/ScoredAreas1a.csv")
finalData <- data %>%
select(id:IMD.score) %>%
mutate_if(is.numeric, funs(scale)) %>%
mutate(score =
((15 * Time) +
Wtd.Ave +
(5 * Affordability) +
(10 * IMD.score)) * -1) %>%
select(id, score) %>%
mutate(score = scale(score)) %>%
left_join(geography, by = c("id" = "lsoa11cd")) %>%
mutate_at(.vars = "score", funs(as.numeric))
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
geom_map(aes(x = 695043.73, y = 5679921.05)) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
geom_hline(aes(695043.73)) +
geom_vline(aes(5679921.05)) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
geom_hline(aes(yintercept = 695043.73)) +
geom_vline(aes(xintercept = 5679921.05)) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
geom_hline(aes(yintercept = 695043.73)) + coord_equal() +
geom_vline(aes(xintercept = 5679921.05)) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
geom_hline(aes(yintercept = 695043.73)) + coord_sf() +
geom_vline(aes(xintercept = 5679921.05)) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
geom_hline(aes(yintercept = 695043.73)) +
geom_vline(aes(xintercept = 5679921.05)) +
+ coord_sf() +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
geom_hline(aes(yintercept = 695043.73)) +
geom_vline(aes(xintercept = 5679921.05)) +
coord_sf() +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
coord_sf(datum=st_crs(4326)) +
theme_minimal()
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
annotate("point",
x = 5679921.05,
y = 695043.73,
colour = "red",
size = 4) +
coord_sf() +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
annotate("point",
x = 695043.73,
y = 5679921.05,
colour = "red",
size = 0.2) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
annotate("point",
x = 679921.05,
y = 695043.73,
colour = "red",
size = 0.2) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis")
ggplot(data = finalData) +
geom_sf(aes(fill = score, colour = score)) +
scale_fill_continuous(type = "viridis") +
scale_colour_continuous(type = "viridis") +
annotate("point",
x = 520000,
y = 160000,
colour = "red",
size = 0.2) +
theme_minimal() +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(tidyverse)
# Start by running this dimmed code (as PP-thin.R):
library(rvest)
library(xml2)
leagueTable <- read_html("http://www.theguardian.com/football/premierleague/table")
clubOrder <- leagueTable %>%
html_nodes(".table--striped") %>%
.[[1]] %>%
html_table()
saveRDS(clubOrder, "data/clubOrder-270118.rds") # + date
clubOrder <- readRDS("data/clubOrder-270118.rds")  # Add date
blogdown:::serve_site()
install.packages(c("blogdown", "bookdown", "DT", "ggraph", "pillar", "rmapzen", "tibble", "tidygraph", "tidyr"))
install.packages(c("blogdown", "bookdown", "DT", "ggraph", "pillar", "rmapzen", "tibble", "tidygraph", "tidyr"))
install.packages("plumber")
X <- 1:10
install.packages("blogdown")
install.packages("bookdown")
library(rvest)
library(xml2)
leagueTable <- read_html("http://www.theguardian.com/football/premierleague/table")
clubOrder <- leagueTable %>%
html_nodes(".table--striped") %>%
.[[1]] %>%
html_table()
saveRDS(clubOrder, "data/clubOrder-180429.rds")
library(tidyverse)
library(htmlwidgets)
library(widgetframe)
library(DT)
# Start by running this dimmed code (as PP-thin.R):
# library(rvest)
# library(xml2)
# leagueTable <- read_html("http://www.theguardian.com/football/premierleague/table")
# clubOrder <- leagueTable %>%
#   html_nodes(".table--striped") %>%
#   .[[1]] %>%
#   html_table()
# saveRDS(clubOrder, "data/clubOrder-180429.rds") # + date
clubOrder <- readRDS("data/clubOrder-180429.rds")
install.packages("widgetframe")
library(tidyverse)
library(htmlwidgets)
library(widgetframe)
library(DT)
# Start by running this dimmed code (as PP-thin.R):
# library(rvest)
# library(xml2)
# leagueTable <- read_html("http://www.theguardian.com/football/premierleague/table")
# clubOrder <- leagueTable %>%
#   html_nodes(".table--striped") %>%
#   .[[1]] %>%
#   html_table()
# saveRDS(clubOrder, "data/clubOrder-180429.rds") # + date
clubOrder <- readRDS("data/clubOrder-180429.rds")
library(tidyverse)
library(htmlwidgets)
library(widgetframe)
library(DT)
# Start by running this dimmed code (as PP-thin.R):
# library(rvest)
# library(xml2)
# leagueTable <- read_html("http://www.theguardian.com/football/premierleague/table")
# clubOrder <- leagueTable %>%
#   html_nodes(".table--striped") %>%
#   .[[1]] %>%
#   html_table()
# saveRDS(clubOrder, "data/clubOrder-180429.rds") # + date
clubOrder <- readRDS("data/clubOrder-180429.rds")  # Add date
# Make the league table consistent with our inputs
clubOrder$Team <- recode(
clubOrder$Team,
`AFC Bournemouth` = "Bournemouth",
`C Palace` = "Crystal Palace",
Spurs = "Tottenham")
clubsABC <- sort(clubOrder$Team)
dataInput <- read_csv("data/PP-2018.csv")
clubStandings <- match(dataInput$Club, clubOrder$Team, 0)
topClub <- match(1, clubStandings, 0)
predictions <- dataInput[,-1]
bonus <- -50*(predictions[topClub,]==1)
ssq <- function(x){(x-clubStandings)^2}
squares <- apply(predictions,2,ssq)
Impact <- c(clubsABC, "Bonus")
bonusSquare <- rbind(squares, bonus)
bonusSquares <- cbind(Impact, bonusSquare) %>%
as_data_frame() %>%
gather(key = "Player", -Impact, value = "Loss")
bonusSquares$Loss <- as.integer(bonusSquares$Loss)
score <- colSums(squares) + bonus
names <- colnames(score)
names1 <- str_replace_all(names, "_", " ")
worst <- apply(squares,2,max)
findWorst <- function(y){match(worst[y],squares[,y],0)}
worstClubNo <- sapply(1:ncol(predictions),findWorst)
worstClub <- clubsABC[worstClubNo]
output <- rbind(score, bonus, worst, worstClubNo)
output1 <- data.frame(names1,t(output))
row.names(output1) <- NULL
output2 <- output1 %>%
mutate(worstClub=clubsABC[worstClubNo]) %>%
select(-worstClubNo)
colnames(output2) <- c("Names", "Scores", "Bonus", "WorstCost", "WorstClub")
report <- output2 %>%
arrange(Scores) %>%
select(Names, Scores, Bonus, WorstClub, WorstCost) %>% unite(WorstChoice, WorstClub, WorstCost, sep = ": ")
dtReport <- datatable(
report,
rownames = FALSE,
options = list(
dom = 't',
pageLength = 23,
order = list(
list(1, 'asc'),
list(0, 'asc')),
columnDefs = list(
list(
className = 'dt-left',
targets = c(0)
),
list(
className = 'dt-right',
targets = c(1, 2, 3)
)
)
)
)
frameWidget(dtReport, width = '100%', height = 800)
install.packages("sf")
install.packages("sf")
install.packages("sf")
install.packages("devtools")
devtools::install_github("r-spatial/sf")
install.packages("plotly")
install.packages("leaflet")
install.packages("maptools")
install.packages("rgeos")
install.packages("sf")
devtools::install_github("tidyverse/ggplot2")
devtools::install_github("r-lib/rlang", build_vignettes = TRUE)
devtools::install_github("tidyverse/ggplot2")
library(tidyverse)
library(sf)
geography <- sf::st_read(
"data/Lower_Layer_Super_Output_Areas_December_2011_Super_Generalised_Clipped__Boundaries_in_England_and_Wales.dbf")
