`Liberal Democrat` = "#FDBB30",
`Scottish National Party` = "#FFFF00",
`Sinn Fein` = "#008800"
)
) +
theme_void() +
labs(
title = "Leave vote and winning party, by constituency",
subtitle = "Hover over a point for the details"
) +
theme(
legend.position = "right",
legend.text = element_text(size = 8, hjust = 0),
legend.title = element_text(size = 10)
)
girafe(ggobj = gg)
suppressMessages(library(tidyverse))
library(ggiraph)
library(parlitools)
library(scales)
map_details <- west_hex_map
brexitData <- leave_votes_west %>%
mutate(
`Leave Vote` = figure_to_use,
Party = as_factor(party_2016),
Party = fct_lump(
Party,
n = 7,
other_level = "Other")
) %>%
left_join(
map_details,
by = c("ons_const_id" = "gss_code")
) %>%
mutate(
constituency = ifelse(
is.na(constituency_name.x),
constituency_name.y,
constituency_name.x
)
) %>%
select(constituency, `Leave Vote`, Party, ons_const_id, geometry) %>%
mutate(
Party =
recode(
Party,
`Scottish National Party` = "SNP",
`Liberal Democrat` = "LibDem"
)
) %>%
arrange(constituency)
gg <- brexitData %>%
ggplot() +
geom_sf_interactive(
aes(
group = constituency,
geometry = geometry,
fill = `Leave Vote`,
colour = Party,
tooltip = paste0(
constituency,
"\n MP: ",
Party,
"\n Leave vote: ",
round(`Leave Vote` * 100, 0),
"%"
)
)
) +
scale_fill_gradient2_interactive(
low = "green",
mid = "white",
high = "orange",
midpoint = 0.5,
labels = percent_format(accuracy = 1)
) +
scale_colour_manual_interactive(
values = c(
Conservative = "#0087DC",
DUP = "#D46A4C",
Independent = "#6AB023",
Other = "#AFAFAFAF",
Labour = "#DC241F",
`Liberal Democrat` = "#FDBB30",
`Scottish National Party` = "#FFFF00",
`Sinn Fein` = "#008800"
)
) +
theme_void() +
labs(
title = "Leave vote and winning party, by constituency",
subtitle = "Hover over a point for the details"
) +
theme(
legend.position = "right",
legend.text = element_text(size = 6, hjust = 0),
legend.title = element_text(size = 8)
)
girafe(ggobj = gg)
suppressMessages(library(tidyverse))
library(ggiraph)
library(parlitools)
library(scales)
map_details <- west_hex_map
brexitData <- leave_votes_west %>%
mutate(
`Leave Vote` = figure_to_use,
`Party of MP` = as_factor(party_2016),
`Party of MP` = fct_lump(
`Party of MP`,
n = 7,
other_level = "Other")
) %>%
left_join(
map_details,
by = c("ons_const_id" = "gss_code")
) %>%
mutate(
constituency = ifelse(
is.na(constituency_name.x),
constituency_name.y,
constituency_name.x
)
) %>%
select(constituency, `Leave Vote`, `Party of MP`, ons_const_id, geometry) %>%
mutate(
`Party of MP` =
recode(
`Party of MP`,
`Scottish National Party` = "SNP",
`Liberal Democrat` = "LibDem"
)
) %>%
arrange(constituency)
gg <- brexitData %>%
ggplot() +
geom_sf_interactive(
aes(
group = constituency,
geometry = geometry,
fill = `Leave Vote`,
colour = `Party of MP`,
tooltip = paste0(
constituency,
"\n MP: ",
`Party of MP`,
"\n Leave vote: ",
round(`Leave Vote` * 100, 0),
"%"
)
)
) +
scale_fill_gradient2_interactive(
low = "green",
mid = "white",
high = "orange",
midpoint = 0.5,
labels = percent_format(accuracy = 1)
) +
scale_colour_manual_interactive(
values = c(
Conservative = "#0087DC",
DUP = "#D46A4C",
Independent = "#6AB023",
Other = "#AFAFAFAF",
Labour = "#DC241F",
LibDem = "#FDBB30",
SNP = "#FFFF00",
`Sinn Fein` = "#008800"
)
) +
theme_void() +
labs(
title = "Leave vote and winning party, by constituency",
subtitle = "Hover over a point for the details"
) +
theme(
legend.position = "right",
legend.text = element_text(size = 6, hjust = 0),
legend.title = element_text(size = 8)
)
girafe(ggobj = gg)
suppressMessages(library(tidyverse))
library(ggiraph)
library(parlitools)
library(scales)
map_details <- west_hex_map
brexitData <- leave_votes_west %>%
mutate(
`Leave Vote` = figure_to_use,
`Party of MP` = as_factor(party_2016),
`Party of MP` = fct_lump(
`Party of MP`,
n = 7,
other_level = "Other")
) %>%
left_join(
map_details,
by = c("ons_const_id" = "gss_code")
) %>%
mutate(
constituency = ifelse(
is.na(constituency_name.x),
constituency_name.y,
constituency_name.x
)
) %>%
select(constituency, `Leave Vote`, `Party of MP`, ons_const_id, geometry) %>%
mutate(
`Party of MP` =
recode(
`Party of MP`,
`Scottish National Party` = "SNP",
`Liberal Democrat` = "LibDem"
)
) %>%
arrange(constituency)
gg <- brexitData %>%
ggplot() +
geom_sf_interactive(
aes(
group = constituency,
geometry = geometry,
fill = `Leave Vote`,
colour = `Party of MP`,
tooltip = paste0(
constituency,
"\n MP: ",
`Party of MP`,
"\n Leave vote: ",
round(`Leave Vote` * 100, 0),
"%"
)
)
) +
scale_fill_gradient_interactive(
low = "white",
high = "#63666a",
labels = percent_format(accuracy = 1)
) +
# scale_fill_gradient2_interactive(
#   low = "green",
#   mid = "white",
#   high = "orange",
#   midpoint = 0.5,
#   labels = percent_format(accuracy = 1)
#   ) +
scale_colour_manual_interactive(
values = c(
Conservative = "#0087DC",
DUP = "#D46A4C",
Independent = "#6AB023",
Other = "#AFAFAFAF",
Labour = "#DC241F",
LibDem = "#FDBB30",
SNP = "#FFFF00",
`Sinn Fein` = "#008800"
)
) +
theme_void() +
labs(
title = "Leave vote and winning party, by constituency",
subtitle = "Hover over a point for the details"
) +
theme(
legend.position = "right",
legend.text = element_text(size = 6, hjust = 0),
legend.title = element_text(size = 8)
)
girafe(ggobj = gg)
sessionInfo()
suppressMessages(library(tidyverse))
library(ggiraph)
library(parlitools)
library(scales)
map_details <- west_hex_map
brexitData <- leave_votes_west %>%
mutate(
`Leave Vote` = figure_to_use,
`Party of MP` = as_factor(party_2016),
`Party of MP` = fct_lump(
`Party of MP`,
n = 7,
other_level = "Other")
) %>%
left_join(
map_details,
by = c("ons_const_id" = "gss_code")
) %>%
mutate(
constituency = ifelse(
is.na(constituency_name.x),
constituency_name.y,
constituency_name.x
)
) %>%
select(constituency, `Leave Vote`, `Party of MP`, ons_const_id, geometry) %>%
mutate(
`Party of MP` =
recode(
`Party of MP`,
`Scottish National Party` = "SNP",
`Liberal Democrat` = "LibDem"
)
) %>%
arrange(constituency)
gg <- brexitData %>%
ggplot() +
geom_sf_interactive(
aes(
group = constituency,
geometry = geometry,
fill = `Leave Vote`,
colour = `Party of MP`,
tooltip = paste0(
constituency,
"\n MP: ",
`Party of MP`,
"\n Leave vote: ",
round(`Leave Vote` * 100, 0),
"%"
)
)
) +
scale_fill_gradient_interactive(
low = "white",
high = "black",
labels = percent_format(accuracy = 1)
) +
# scale_fill_gradient2_interactive(
#   low = "green",
#   mid = "white",
#   high = "orange",
#   midpoint = 0.5,
#   labels = percent_format(accuracy = 1)
#   ) +
scale_colour_manual_interactive(
values = c(
Conservative = "#0087DC",
DUP = "#D46A4C",
Independent = "#6AB023",
Other = "#AFAFAFAF",
Labour = "#DC241F",
LibDem = "#FDBB30",
SNP = "#FFFF00",
`Sinn Fein` = "#008800"
)
) +
theme_void() +
labs(
title = "Leave vote and winning party, by constituency",
subtitle = "Hover over a point for the details"
) +
theme(
legend.position = "right",
legend.text = element_text(size = 6, hjust = 0),
legend.title = element_text(size = 8)
)
girafe(ggobj = gg)
suppressMessages(library(tidyverse))
library(ggiraph)
library(parlitools)
library(scales)
map_details <- west_hex_map
brexitData <- leave_votes_west %>%
mutate(
`Leave Vote` = figure_to_use,
`Party of MP` = as_factor(party_2016),
`Party of MP` = fct_lump(
`Party of MP`,
n = 7,
other_level = "Other")
) %>%
left_join(
map_details,
by = c("ons_const_id" = "gss_code")
) %>%
mutate(
constituency = ifelse(
is.na(constituency_name.x),
constituency_name.y,
constituency_name.x
)
) %>%
select(constituency, `Leave Vote`, `Party of MP`, ons_const_id, geometry) %>%
mutate(
`Party of MP` =
recode(
`Party of MP`,
`Scottish National Party` = "SNP",
`Liberal Democrat` = "LibDem"
)
) %>%
arrange(constituency)
gg <- brexitData %>%
ggplot() +
geom_sf_interactive(
aes(
group = constituency,
geometry = geometry,
fill = `Leave Vote`,
colour = `Party of MP`,
tooltip = paste0(
constituency,
"\n MP: ",
`Party of MP`,
"\n Leave vote: ",
round(`Leave Vote` * 100, 0),
"%"
)
)
) +
scale_fill_gradient_interactive(
low = "white",
high = "#63666a",
labels = percent_format(accuracy = 1)
) +
scale_colour_manual_interactive(
values = c(
Conservative = "#0087DC",
DUP = "#D46A4C",
Independent = "#6AB023",
Other = "#AFAFAFAF",
Labour = "#DC241F",
LibDem = "#FDBB30",
SNP = "#FFFF00",
`Sinn Fein` = "#008800"
)
) +
theme_void() +
labs(
title = "Leave vote and winning party, by constituency",
subtitle = "Hover over a point for the details"
) +
theme(
legend.position = "right",
legend.text = element_text(size = 6, hjust = 0),
legend.title = element_text(size = 8)
)
girafe(ggobj = gg)
remove.packages("leaflet.providers")
install.packages("leaflet.providers")
remove.packages("leaflet")
install.packages("leaflet")
library(leaflet)
libr
library(leaflet.providers)
get_providers()
install.packages("V8")
library(leaflet.providers)
get_providers()
library(leaflet.providers)
get_providers()
devtools::install_github("rstudio/leaflet.providers")
leaflet.providers::get_providers()
install.packages("V8")
install.packages("V8")
leaflet.providers::get_providers()
leaflet.providers::providers_loaded()
library(airportr)
library(crosstalk)
library(DT)
library(leaflet)
library(lubridate)
library(rvest)
suppressMessages(library(tidyverse))
library(xml2)
overall <- read_rds('overall.rds')
pal <- colorNumeric(
palette = "Reds",
domain = overall$temp_av)
sd <- SharedData$new(overall)
bscols(
filter_slider("temp", "Temperature", sd, column=~temp_av, step=1, width=100),
filter_slider("duration", "Flight minutes", sd, column=~minutes, step=1, width=100),
filter_select("mon", "Month", sd, group=~month_label, multiple = FALSE)
)
output_map <- leaflet(sd) %>%
addTiles() %>%
setView(
lng = 15,
lat = 10,
zoom = 2) %>%
addCircles(
lng = ~Longitude,
lat = ~Latitude,
weight = 2,
radius = ~sqrt(minutes) * 10000,
popup = ~paste(city, "- time: ", round(minutes/60, 1), "hrs; temp: ", round(temp_av, 2), "C"),
color = ~pal(temp_av)
)
output_table <- datatable(
sd,
rownames = FALSE,
colnames = c('country' = 'country', 'city' = 'city', 'temp' = 'temp_av', 'minutes' = 'minutes', 'Long' = 'Longitude', 'Lat' = 'Latitude', 'month' = 'month_label'),
extensions="Scroller",
style="bootstrap",
class="compact",
width="100%",
options=list(
dom = 'tip',
deferRender=TRUE,
scrollY=300,
scroller=TRUE
)
) %>%
formatRound(
columns = c(3, 4, 5, 6),
digits = 0
)
bscols(output_map, output_table)
sessionInfo()
