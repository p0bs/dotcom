get_projection(
url_odds = odds_for_final_game,
url_predictions = player_data,
project_players = TRUE,
runs = 1000,
seed = 26)
get_projection(
url_odds = odds_for_final_game,
url_predictions = player_data,
project_players = TRUE,
runs = 1000,
seed = 26)
library(premPredictor)
player_data <- get_player_data("https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv")
odds_for_final_game <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/odds.csv"
get_latest_standings(data_input = player_data)
get_projection(
url_odds = odds_for_final_game,
url_predictions = player_data,
project_players = TRUE,
runs = 1000,
seed = 26)
get_projection(
url_odds = odds_for_final_game,
url_predictions = player_data,
project_players = TRUE)
get_projection(
url_odds = odds_for_final_game,
url_predictions = player_data,
project_players = TRUE)
library(premPredictor)
player_data <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
odds_for_final_game <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/odds.csv"
get_latest_standings(data_input = player_data)
player_data <- get_player_data(url_value = player_info)
library(premPredictor)
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
odds_for_final_game <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/odds.csv"
player_data <- get_player_data(url_value = player_info)
get_latest_standings(data_input = player_data)
get_projection(
url_odds = odds_for_final_game,
url_predictions = player_data,
project_players = TRUE)
get_projection(
url_odds = odds_for_final_game,
url_predictions = player_info,
project_players = TRUE)
library(premPredictor)
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/odds.csv"
odds <- get_odds_data(odds_info)
library(premPredictor)
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds <- get_odds_data(url_value = odds_info)
library(premPredictor)
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds <- get_odds_data(url_value = odds_info)
library(premPredictor)
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data)
library(premPredictor)
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data)
get_projection(
url_odds = odds_data,
url_predictions = player_info,
project_players = TRUE)
get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE)
library(premPredictor)
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data)
get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE)
get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE)
suppressMessages(library(tidyverse))
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE)
suppressMessages(library(tidyverse))
project_team %>%
select(Liverpool, `Man City`) %>%
count()
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`)
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n))
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE)
suppressMessages(library(tidyverse))
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n))
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE)
suppressMessages(library(tidyverse))
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n))
library(premPredictor)
suppressMessages(library(tidyverse))
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE)
project_players %>%
dplyr::filter(Frequency > 0) %>%
dplyr::arrange(-Frequency) %>%
dplyr::mutate(Likelihood = Frequency/iterations) %>%
dplyr::select(Name, Likelihood) %>%
tibble::as_tibble(.)
library(premPredictor)
suppressMessages(library(tidyverse))
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE)
# project_players %>%
#   dplyr::filter(Frequency > 0) %>%
#   dplyr::arrange(-Frequency) %>%
#   dplyr::mutate(Likelihood = Frequency/iterations) %>%
#   dplyr::select(Name, Likelihood) %>%
#   tibble::as_tibble(.)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE)
# project_players %>%
#   dplyr::filter(Frequency > 0) %>%
#   dplyr::arrange(-Frequency) %>%
#   dplyr::mutate(Likelihood = Frequency/iterations) %>%
#   dplyr::select(Name, Likelihood) %>%
#   tibble::as_tibble(.)
winPlayer <- as.data.frame(project_players==1L)
View(winPlayer)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
colnames(winLikelihood)[1] <- "Frequency"
colnames(names1)[1] <- "Name"
winSummary <- cbind(
colnames(project_players),
winLikelihood$Frequency
)
View(winSummary)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = winLikelihood$Frequency
) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = winLikelihood$Frequency)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = winLikelihood$Frequency) %>%
filter(Frequency > 0) %>%
arrange(-Frequency)
Name = colnames(project_players),
winSummary <- tibble(
Name = colnames(project_players),
Frequency = winLikelihood$Frequency) %>%
mutate(Name = str_replace(Name, ".", " ")) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
runs = iterations)
winPlayer <- as.data.frame(project_players==1L)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
#
# colnames(winLikelihood)[1] <- "Frequency"
# colnames(names1)[1] <- "Name"
winSummary <- tibble(
Name = colnames(project_players),
Frequency = winLikelihood$Frequency) %>%
mutate(Name = str_replace(Name, ".", " ")) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, Frequency))
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1))
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
mutate(Name = str_replace(Name, ".", " ")) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary %>%
dplyr::filter(Frequency > 0) %>%
dplyr::arrange(-Frequency) %>%
dplyr::mutate(Likelihood = Frequency/iterations) %>%
dplyr::select(Name, Likelihood) %>%
tibble::as_tibble(.)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
mutate(Name = str_replace(Name, "/.", " ")) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
Name = colnames(project_players),
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
mutate(Name = str_replace(Name, "//.", " ")) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
Name = colnames(project_players),
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
mutate(Name = str_replace(Name, "/.", "/ ")) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
Name = colnames(project_players),
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
mutate(Name = str_replace_all(Name, "/.", " ")) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
Name = colnames(project_players),
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
mutate(Name = str_replace_all(Name, "/.", "")) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary %>%
dplyr::filter(Frequency > 0) %>%
dplyr::arrange(-Frequency) %>%
dplyr::mutate(Likelihood = Frequency/iterations) %>%
dplyr::select(Name, Likelihood) %>%
tibble::as_tibble(.)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
runs = iterations)
winPlayer <- as.data.frame(project_players==1L)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
runs = iterations)
winPlayer <- as.data.frame(project_players==1L)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE,
runs = iterations)
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n))
combined <- bind_cols(winPlayer, project_team)
combined <- bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool)
combined <- bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
count(.)
combined <- bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
count(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool)
View(combined)
combined <- bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
count(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(Roger.Gathercole, `Man.City`)
combined <- bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
count(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(Roger.Gathercole, `Man City`)
bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
count(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(Roger.Gathercole, `Man City`)
bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
count(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(desc(chance))
bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
count(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(`Man City`, desc(chance))
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
runs = iterations)
winPlayer <- as.data.frame(project_players==1L)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE,
runs = iterations)
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n)) %>%
arrange(desc(chance))
bind_cols(winPlayer, project_team) %>%
select(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
count(Roger.Gathercole, Luke.Finnis, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(`Man City`, desc(chance))
install.packages(c("blogdown", "tsibble"))
install.packages(c("blogdown", "tsibble"))
install.packages(c("blogdown", "tsibble"))
install.packages(c("bookdown", "dplyr", "DT", "knitr", "pillar", "progress", "reprex", "rvest", "tinytex", "xfun"))
install.packages(c("bookdown", "dplyr", "DT", "knitr", "pillar", "progress", "reprex", "rvest", "tinytex", "xfun"))
library(FinCal)
library(glue)
library(httr)
library(lubridate)
library(quantmod)
library(rtweet)
library(rvest)
suppressPackageStartupMessages(library(tidyverse))
months_total <- 300
months_gone <- ((year(Sys.Date()) - 2007) * 12) + month(Sys.Date()) - 1
months_left <- months_total - months_gone
rate <- 0.0496/12
payment <- pmt(r = rate, n = months_total, fv = 0, pv = 320000, type = 0)
remaining <- pv(r = rate, n = months_left, fv = 0, pmt = payment, type = 0)
redemption <- 0.03 * remaining
# H estimate ----
Zoopla <- read_html("http://www.zoopla.co.uk/house-prices/wonersh/phillips-hatch/?q=wonersh%20phillips%20hatch%206&yr=9845856")
data <- Zoopla %>%
html_nodes(".browse-estimate-value") %>%
html_text() %>%
stringr::str_trim()
value_house <-  word(data, 1)[1] %>%
str_sub(2, -2) %>%
str_replace(",", "") %>%
as.numeric()
Zoopla1 <- read_html("https://www.zoopla.co.uk/house-prices/cranleigh/waverleigh-road/?q=10%20Waverleigh%20Road%2C%20Cranleigh%20GU6&yr=9852441")
data1 <- Zoopla1 %>%
html_nodes(".browse-estimate-value") %>%
html_text() %>%
stringr::str_trim()
comparitor <-  word(data1, 1)[1] %>%
str_sub(2, -2) %>%
str_replace(",", "") %>%
as.numeric()/1000
# Overall calculations ----
cost_sell <- 0.02
cost_buy <- 0.05
excess_estimate <- (0.98 * value_house) - remaining - redemption
cash_assets <- 31000
total_gross <- excess_estimate + cash_assets
total_net <- total_gross / (1 + cost_sell + cost_buy)
display <- round(total_net/1000)
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data, use_saved_data = T, data_file = 'data/201819_penultimate.rds')
get_latest_standings(data_input = player_data, use_saved_data = T, data_file = 'portfolio/data/201819_penultimate.rds')
get_latest_standings(data_input = player_data, use_saved_data = T, data_file = 'content/portfolio/data/201819_penultimate.rds')
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data, use_saved_data = T, data_file = 'content/portfolio/data/201819_penultimate.rds')
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <- "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(data_input = player_data, use_saved_data = T, data_file = 'data/201819_penultimate.rds')
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
runs = iterations)
