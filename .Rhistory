geom_ridgeline(
stat = "binline",
bins = 20, scale = 0.95,
draw_baseline = FALSE
) +
scale_x_continuous(
breaks = c(5, 10, 15, 20),
labels = c(5, 10, 15, 20)
) +
labs(
y = "", x = "",
title = "\n Our collective predictions for this season \n"
) +
scale_fill_gradient(
low = "green", high = "red",
guide=FALSE
) +
scale_color_gradient(
low = "green", high = "red",
guide=FALSE
) +
theme(
title = element_text(size = 10),
axis.text.y = element_text(size = 6)
)
library(ggridges)
library(premPredictor)
suppressMessages(library(tidyverse))
# player_info <-
#   "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-19-20.csv"
# player_data <- get_player_data(url_value = player_info)
player_data <- read_rds('data_input_2019-20.rds')
results <- get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201920_week1.rds'
)
knitr::kable(results)
data_input1 <- as_data_frame(player_data)
averageView <- round(rowMeans(data_input1[, -1]), 2)
views <- cbind(data_input1[,1], averageView)
data_input2 <- data_input1 %>%
gather(key = "Player", -Club, value = "Prediction") %>%
left_join(views, by = "Club")
ggplot(
data = data_input2,
mapping = aes(
y = reorder(Club, -averageView),
x = Prediction,
fill = averageView,
color = averageView
)
) +
geom_ridgeline(
stat = "binline",
bins = 20, scale = 0.95,
draw_baseline = FALSE
) +
scale_x_continuous(
breaks = c(5, 10, 15, 20),
labels = c(5, 10, 15, 20)
) +
labs(
y = "", x = "",
title = "\n Our collective predictions for this season \n"
) +
scale_fill_gradient(
low = "green", high = "red",
guide=FALSE
) +
scale_color_gradient(
low = "green", high = "red",
guide=FALSE
) +
theme(
title = element_text(size = 10),
axis.text.y = element_text(size = 6)
)
library(ggridges)
library(premPredictor)
suppressMessages(library(tidyverse))
# player_info <-
#   "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-19-20.csv"
# player_data <- get_player_data(url_value = player_info)
player_data <- read_rds('data_input_2019-20.rds')
results <- get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201920_week1.rds'
)
knitr::kable(results)
data_input1 <- as_data_frame(player_data)
averageView <- round(rowMeans(data_input1[, -1]), 2)
views <- cbind(data_input1[,1], averageView)
data_input2 <- data_input1 %>%
gather(key = "Player", -Club, value = "Prediction") %>%
left_join(views, by = "Club")
ggplot(
data = data_input2,
mapping = aes(
y = reorder(Club, -averageView),
x = Prediction,
fill = averageView,
color = averageView
)
) +
geom_ridgeline(
stat = "binline",
bins = 20, scale = 0.95,
draw_baseline = FALSE
) +
scale_x_continuous(
breaks = c(5, 10, 15, 20),
labels = c(5, 10, 15, 20)
) +
labs(
y = "", x = "",
title = "\n Our collective predictions for this season \n"
) +
scale_fill_gradient(
low = "green", high = "red",
guide=FALSE
) +
scale_color_gradient(
low = "green", high = "red",
guide=FALSE
) +
theme(
title = element_text(size = 10),
axis.text.y = element_text(size = 6)
)
library(ggridges)
library(premPredictor)
suppressMessages(library(tidyverse))
# player_info <-
#   "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-19-20.csv"
# player_data <- get_player_data(url_value = player_info)
player_data <- read_rds('data_input_2019-20.rds')
results <- get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201920_week1.rds'
)
knitr::kable(results)
data_input1 <- as_data_frame(player_data)
averageView <- round(rowMeans(data_input1[, -1]), 2)
views <- cbind(data_input1[,1], averageView)
data_input2 <- data_input1 %>%
gather(key = "Player", -Club, value = "Prediction") %>%
left_join(views, by = "Club")
ggplot(
data = data_input2,
mapping = aes(
y = reorder(Club, -averageView),
x = Prediction,
fill = averageView,
color = averageView
)
) +
geom_ridgeline(
stat = "binline",
bins = 20, scale = 0.95,
draw_baseline = FALSE
) +
scale_x_continuous(
breaks = c(5, 10, 15, 20),
labels = c(5, 10, 15, 20)
) +
labs(
y = "", x = "",
title = "\n Our collective predictions for this season \n"
) +
scale_fill_gradient(
low = "green", high = "red",
guide=FALSE
) +
scale_color_gradient(
low = "green", high = "red",
guide=FALSE
) +
theme(
title = element_text(size = 10),
axis.text.y = element_text(size = 6)
)
sessionInfo()
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <-
"https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201819_penultimate.rds'
)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
use_saved_data = T,
data_file = "201819_penultimate.rds",
runs = iterations)
winPlayer <- as.data.frame(project_players==1L)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE,
use_saved_data = T,
data_file = "201819_penultimate.rds",
runs = iterations)
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n)) %>%
arrange(desc(chance))
bind_cols(winPlayer, project_team) %>%
select(
Roger = Roger.Gathercole,
Luke = Luke.Finnis,
`Man City`, Liverpool) %>%
count(Roger, Luke, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(`Man City`, desc(chance))
sessionInfo()
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <-
"https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
results <- get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201819_penultimate.rds'
)
knitr::kable(results)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
use_saved_data = T,
data_file = "201819_penultimate.rds",
runs = iterations)
winPlayer <- as.data.frame(project_players==1L)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
winSummary
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE,
use_saved_data = T,
data_file = "201819_penultimate.rds",
runs = iterations)
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n)) %>%
arrange(desc(chance))
bind_cols(winPlayer, project_team) %>%
select(
Roger = Roger.Gathercole,
Luke = Luke.Finnis,
`Man City`, Liverpool) %>%
count(Roger, Luke, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(`Man City`, desc(chance))
sessionInfo()
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <-
"https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
results <- get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201819_penultimate.rds'
)
knitr::kable(results)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
use_saved_data = T,
data_file = "201819_penultimate.rds",
runs = iterations)
winPlayer <- as.data.frame(project_players==1L)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
knitr::kable(winSummary)
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE,
use_saved_data = T,
data_file = "201819_penultimate.rds",
runs = iterations)
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n)) %>%
arrange(desc(chance)) %>%
knitr::kable()
bind_cols(winPlayer, project_team) %>%
select(
Roger = Roger.Gathercole,
Luke = Luke.Finnis,
`Man City`, Liverpool) %>%
count(Roger, Luke, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(`Man City`, desc(chance)) %>%
knitr::kable()
sessionInfo()
library(ggridges)
library(premPredictor)
suppressMessages(library(tidyverse))
# player_info <-
#   "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-19-20.csv"
# player_data <- get_player_data(url_value = player_info)
player_data <- read_rds('data_input_2019-20.rds')
results <- get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201920_week1.rds'
)
knitr::kable(results)
data_input1 <- as_data_frame(player_data)
averageView <- round(rowMeans(data_input1[, -1]), 2)
views <- cbind(data_input1[,1], averageView)
data_input2 <- data_input1 %>%
gather(key = "Player", -Club, value = "Prediction") %>%
left_join(views, by = "Club")
ggplot(
data = data_input2,
mapping = aes(
y = reorder(Club, -averageView),
x = Prediction,
fill = averageView,
color = averageView
)
) +
geom_ridgeline(
stat = "binline",
bins = 20, scale = 0.95,
draw_baseline = FALSE
) +
scale_x_continuous(
breaks = c(5, 10, 15, 20),
labels = c(5, 10, 15, 20)
) +
labs(
y = "", x = "",
title = "\n Our collective predictions for this season \n"
) +
scale_fill_gradient(
low = "green", high = "red",
guide=FALSE
) +
scale_color_gradient(
low = "green", high = "red",
guide=FALSE
) +
theme(
title = element_text(size = 10),
axis.text.y = element_text(size = 6)
)
sessionInfo()
library(ggridges)
library(premPredictor)
suppressMessages(library(tidyverse))
# player_info <-
#   "https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-19-20.csv"
# player_data <- get_player_data(url_value = player_info)
player_data <- read_rds('data_input_2019-20.rds')
results <- get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201920_week1.rds'
)
knitr::kable(results)
data_input1 <- as_tibble(player_data)
averageView <- round(rowMeans(data_input1[, -1]), 2)
views <- cbind(data_input1[,1], averageView)
data_input2 <- data_input1 %>%
gather(key = "Player", -Club, value = "Prediction") %>%
left_join(views, by = "Club")
ggplot(
data = data_input2,
mapping = aes(
y = reorder(Club, -averageView),
x = Prediction,
fill = averageView,
color = averageView
)
) +
geom_ridgeline(
stat = "binline",
bins = 20, scale = 0.95,
draw_baseline = FALSE
) +
scale_x_continuous(
breaks = c(5, 10, 15, 20),
labels = c(5, 10, 15, 20)
) +
labs(
y = "", x = "",
title = "\n Our collective predictions for this season \n"
) +
scale_fill_gradient(
low = "green", high = "red",
guide=FALSE
) +
scale_color_gradient(
low = "green", high = "red",
guide=FALSE
) +
theme(
title = element_text(size = 10),
axis.text.y = element_text(size = 6)
)
sessionInfo()
library(premPredictor)
suppressMessages(library(tidyverse))
iterations <- 10000
player_info <-
"https://www.dropbox.com/s/uin6zk4w5cyk2m1/PremPredict-18-19.csv"
player_data <- get_player_data(url_value = player_info)
odds_info <- "https://www.dropbox.com/s/cb5qyxyexksvez1/odds.csv"
odds_data <- get_odds_data(url_value = odds_info)
results <- get_latest_standings(
data_input = player_data,
use_saved_data = T,
data_file = '201819_penultimate.rds'
)
knitr::kable(results)
project_players <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = TRUE,
use_saved_data = T,
data_file = "201819_penultimate.rds",
runs = iterations)
winPlayer <- as.data.frame(project_players==1L)
winLikelihood <- as.data.frame(
apply(winPlayer, 2, sum)
)
winSummary <- tibble(
Name = colnames(project_players),
Frequency = pull(winLikelihood, 1)) %>%
filter(Frequency > 0) %>%
arrange(-Frequency) %>%
mutate(Likelihood = Frequency/iterations) %>%
select(Name, Likelihood)
knitr::kable(winSummary)
project_team <- get_projection(
url_odds = odds_info,
url_predictions = player_info,
project_players = FALSE,
use_saved_data = T,
data_file = "201819_penultimate.rds",
runs = iterations)
project_team %>%
select(Liverpool, `Man City`) %>%
count(Liverpool, `Man City`) %>%
mutate(chance = n / sum(n)) %>%
arrange(desc(chance)) %>%
knitr::kable()
bind_cols(winPlayer, project_team) %>%
select(
Roger = Roger.Gathercole,
Luke = Luke.Finnis,
`Man City`, Liverpool) %>%
count(Roger, Luke, `Man City`, Liverpool) %>%
mutate(chance = n / sum(n)) %>%
arrange(`Man City`, desc(chance)) %>%
knitr::kable()
sessionInfo()
